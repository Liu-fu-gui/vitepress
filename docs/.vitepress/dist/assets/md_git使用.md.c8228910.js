import{_ as s,o as a,c as l,O as e}from"./chunks/framework.62020867.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"md/git使用.md","filePath":"md/git使用.md"}'),p={name:"md/git使用.md"},n=e(`<p>要更新GitHub上的文件，您需要执行以下步骤：</p><ol><li>确保您已经在本地对文件进行了更改并进行了适当的保存。</li><li>使用<code>git add</code>命令将更改的文件添加到暂存区。例如，如果您修改了一个名为<code>index.html</code>的文件，可以运行以下命令：</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">csharpCopy code</span></span>
<span class="line"><span style="color:#A6ACCD;">git add index.html</span></span></code></pre></div><p>如果您修改了多个文件，可以使用通配符 <code>*</code> 添加所有更改的文件：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">csharpCopy code</span></span>
<span class="line"><span style="color:#A6ACCD;">git add *</span></span></code></pre></div><ol><li>确认已将更改添加到暂存区后，使用<code>git commit</code>命令提交更改并添加一个提交消息。提交消息应简洁明了，准确描述您进行的更改。例如：</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sqlCopy code</span></span>
<span class="line"><span style="color:#A6ACCD;">git commit -m &quot;Update index.html file&quot;</span></span></code></pre></div><ol><li>最后，使用<code>git push</code>命令将更改推送到GitHub仓库。该命令的语法如下：</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">perlCopy code</span></span>
<span class="line"><span style="color:#A6ACCD;">git push origin &lt;branch-name&gt;</span></span></code></pre></div><p>将<code>&lt;branch-name&gt;</code>替换为您要推送到的分支名称。通常，<code>main</code>分支是默认的主分支。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cssCopy code</span></span>
<span class="line"><span style="color:#A6ACCD;">git push origin main</span></span></code></pre></div><p>在执行此命令后，您的更改将被推送到GitHub仓库，并且文件将会更新。其他人可以在获取最新更改后查看和访问更新的文件。</p><p>要查看本地分支是否有新的更改或提交，可以使用以下命令：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">luaCopy code</span></span>
<span class="line"><span style="color:#A6ACCD;">git status</span></span></code></pre></div><p>运行该命令后，Git会显示当前仓库的状态信息，包括已修改但未提交的文件、已暂存但未提交的更改以及已提交但尚未推送到远程仓库的提交。</p><p>要将本地文件上传到GitHub仓库，你可以按照以下步骤使用Git Bash：</p><ol><li>在本地仓库文件夹中打开Git Bash终端。</li><li>初始化本地仓库：如果你的文件夹还没有初始化为Git仓库，可以使用以下命令进行初始化：</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">csharpCopy code</span></span>
<span class="line"><span style="color:#A6ACCD;">git init</span></span></code></pre></div><ol><li>添加文件到暂存区：使用以下命令将要上传的文件添加到Git的暂存区：</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">csharpCopy code</span></span>
<span class="line"><span style="color:#A6ACCD;">git add 文件名</span></span></code></pre></div><p>如果你要添加所有文件，可以使用<code>git add .</code>命令。</p><ol><li>提交更改：使用以下命令提交你的更改到本地仓库：</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sqlCopy code</span></span>
<span class="line"><span style="color:#A6ACCD;">git commit -m &quot;提交描述&quot;</span></span></code></pre></div><p>在引号中，你可以写下关于这次提交的描述信息。</p><ol><li>添加远程仓库：将你的GitHub仓库链接添加为远程仓库，使用以下命令：</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">csharpCopy code</span></span>
<span class="line"><span style="color:#A6ACCD;">git remote add origin 远程仓库链接</span></span></code></pre></div><p>请将<code>远程仓库链接</code>替换为你的GitHub仓库的URL。</p><ol><li>推送更改到远程仓库：使用以下命令将你的本地更改推送到远程仓库：</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">perlCopy code</span></span>
<span class="line"><span style="color:#A6ACCD;">git push -u origin 分支名称</span></span></code></pre></div><p>将<code>分支名称</code>替换为你想要推送的分支的名称，通常是<code>main</code>或<code>master</code>。</p><p>这样，你的本地文件就会被上传到GitHub仓库中。</p><p>根据您的输出信息，克隆GitHub仓库时出现了权限被拒绝的错误。这通常是因为您在克隆时使用了SSH密钥，并且该密钥未被正确配置或未被添加到您的GitHub帐户中。</p><p>以下是解决此问题的一些步骤：</p><ol><li><p>确保您拥有正确的SSH密钥。您可以通过运行以下命令来检查是否存在SSH密钥：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">bashCopy code</span></span>
<span class="line"><span style="color:#A6ACCD;">ls -al ~/.ssh</span></span></code></pre></div><p>如果没有任何密钥，请生成一个新的SSH密钥。您可以使用以下命令生成密钥：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">bashCopy code</span></span>
<span class="line"><span style="color:#A6ACCD;">ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</span></span></code></pre></div><p>按照提示输入密钥的保存位置和密码（如果需要）。</p></li><li><p>在GitHub上添加您的SSH公钥。将生成的公钥（位于 <code>~/.ssh/id_rsa.pub</code> 文件中）的内容复制到您的GitHub帐户的SSH密钥设置中。您可以在GitHub的设置页面中找到SSH和GPG密钥选项。</p></li><li><p>验证您的SSH连接是否正常工作。您可以使用以下命令进行测试：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">bashCopy code</span></span>
<span class="line"><span style="color:#A6ACCD;">ssh -T git@github.com</span></span></code></pre></div><p>如果一切正常，您应该看到一条消息，指示您已成功通过SSH进行身份验证。</p></li><li><p>尝试重新克隆GitHub仓库。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">bashCopy code</span></span>
<span class="line"><span style="color:#A6ACCD;">git clone git@github.com:Liu-wei-tao/vitepress.git</span></span></code></pre></div><p>如果一切顺利，克隆操作应该能够成功进行。</p></li></ol>`,34),o=[n];function t(i,c,d,r,C,g){return a(),l("div",null,o)}const y=s(p,[["render",t]]);export{h as __pageData,y as default};
